% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rs_calcEx.R
\name{calcex}
\alias{calcex}
\title{calculation of spectral indices, basic spatial statistics and textures and
     optionally extracting pix values over all channels according to vector data}
\usage{
calcex(useTrainData = TRUE, calculateBands = TRUE, extractTrain = TRUE,
  prefixrunFN = "train", suffixTrainGeom = "TrainingArea",
  prefixTrainGeom = "index_", channels = c("red", "green", "blue"),
  hara = TRUE, haraType = c("simple", "advanced", "higher"), stat = TRUE,
  edge = TRUE, edgeType = c("gradient", "sobel", "touzi"), morpho = TRUE,
  morphoType = c("dilate", "erode", "opening", "closing"),
  indices = c("VVI", "VARI", "NDTI", "RI", "SCI", "BI", "SI", "HI", "TGI",
  "GLI", "NGRDI", "GRVI", "GLAI", "HUE", "CI", "SAT", "SHP"), RGBTrans = TRUE,
  colorSpaces = c("CIELab", "CMY", "Gray", "HCL", "HSB", "HSI", "Log", "XYZ",
  "YUV"), kernel = 3, currentDataFolder = NULL, currentIdxFolder = NULL)
}
\arguments{
\item{useTrainData}{logical switch for choosing training data (which needs much more/all possible channels) or classification data the necessary ones # useTrainData switch to decide if using training images or classification data (FALSE) default = TRUE}

\item{calculateBands}{logical switch for set on calculation of syntheic bands and indices default = TRUE}

\item{extractTrain}{logical switch for set on extract training data according to training geometries default = TRUE}

\item{prefixrunFN}{prefix of current run default = "train"}

\item{suffixTrainGeom}{suffix of training shape files e.g. index_2017_05_11_RGB_DEFS18_08_TrainingArea.shp default = "TrainingArea"}

\item{prefixTrainGeom}{prefix of training image files e.g. index_2017_05_11_RGB_DEFS18_08_OrthoMosaic.tif default = "index_"}

\item{channels}{optional channels to be choosed options are c("red", "green", "blue")  default =  c("red", "green", "blue")}

\item{hara}{logical switch for using  HaralickTextureExtraction default = TRUE \cr
for a review of a lot of feature extraction algorithms look at:\href{http://homepages.dcc.ufmg.br/~william/papers/paper_2012_JEI.pdf}{Williams et al, 2012}\cr
glcm<-> haralick c("mean"  advanced1, "variance" advanced2 , "homogeneity"simple4, "contrast" simple5, "dissimilarity"advanced2, "entropy" simple2,"second_moment"simple4, "correlation" simple3)
using stats will cover mean and variance while dissimilarity is highly correlated to  Homogeneity data. For a nice introduction look at: \href{http://www.fp.ucalgary.ca/mhallbey/more_informaton.htm}{Hallbey}}

\item{haraType}{hara options default is c("simple"), other  options are "advanced"  "higher" "all". NOTE:  "higher" takes a LOT of time}

\item{stat}{logical switch for using statistic default = TRUE the stas are mean,variance, curtosis, skewness}

\item{edge}{logical switch for using edge filtering default = TRUE}

\item{edgeType}{edge options default is c("gradient","sobel","touzi") all options are c("gradient","sobel","touzi")}

\item{morpho}{logical switch for using morphological filtering default = TRUE}

\item{morphoType}{morphological options default is c("dilate","erode","opening","closing") all options are ("dilate","erode","opening","closing")}

\item{indices}{RGB indices default is c("VARI","NDTI","RI","CI","BI","SI","HI","TGI","GLI","NGRDI") all options are c("VARI","NDTI","TGI","GLI","NGRDI","GLAI")}

\item{RGBTrans}{logical switch for using color space transforming default = TRUE}

\item{colorSpaces}{RGB colorspace transforming to default c("CIELab","CMY","Gray","HCL","HSB","HSI","Log","XYZ","YUV")}

\item{kernel}{size of kernel for filtering and statistics default is  3}

\item{currentDataFolder}{NULL folder to image (and shape) data}

\item{currentidxFolder}{NULL folder for saving the results}
}
\description{
The usecaseRGB functions are providing a common workflow for a random forest based classification of visible imagery.
The worflow is divided in 4 steps:\cr\cr
(01) calculation of spectral indices, basic spatial statistics and textures and
     extracting of training values over all channels according to training data
     (calcex)\cr\cr
(02) model training using random forest and the forward feature selection method
     (02_useCaseRGB_train.R)\cr\cr
(03) calculation spectral indices, basic spatial statistics and textures for 
     all rgb data according to the model requests (01_useCaseRGB_calcex.R)\cr\cr
(04) prediction (02_useCaseRGB_predict.R)\cr\cr
(05) basic analysis and results extraction (04_useCaseRGB_analyze.R)\cr\cr
}
\examples{
\dontrun{
require(uavRst)
devtools::install_github("gisma/link2GI", ref = "master")

#---> define environment and settings
# define project folder
projRootDir <- "~/temp7/GRASS7"

# create project structure and export global pathes
link2GI::initProj(projRootDir = projRootDir,
                 projFolders = c("data/",
                                 "data/training/",
                                 "data/training/idx/",
                                 "output/",
                                 "run/",
                                 "fun/") )
# set working directory
setwd(path_run)
res <- calcex( useTrainData      = TRUE, 
              calculateBands    = TRUE, 
              extractTrain      = TRUE, 
              prefixrunFN       = "traddel",
              suffixTrainGeom   = "TrainingArea",
              prefixTrainGeom   = "index_", 
              indices           = c("VARI","NDTI","RI","CI","BI","SI","HI","TGI","GLI","NGRDI") , 
              channels          = c("red", "green", "blue"),  
              hara              = FALSE,
              haraType          = c("simple","advanced","higher"),   
              stat              = TRUE, 
              edge              = TRUE, 
              edgeType          = c("gradient","sobel","touzi"), 
              morpho            = TRUE, 
              morphoType        = c("dilate","erode","opening","closing"), 
              kernel            = 3, 
              currentDataFolder = path_data_training,
              currentIdxFolder  = path_data_training_idx)
}
              
}
