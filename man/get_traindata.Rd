% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rs_classify.R
\name{get_traindata}
\alias{get_traindata}
\title{Extracts training data from a raster stack using vector data as a mask.}
\usage{
get_traindata(rasterStack = NULL, trainPlots = NULL)
}
\arguments{
\item{rasterStack}{an object of rasterstack*. containing image data to make prediction on}

\item{trainPlots}{an object of SpatialPolygonDataFrame*. providing the training areas}
}
\description{
Extracts training data from a raster stack and returns a dataframe containing for each pixel all values.
}
\examples{
\dontrun{

# required packages
 require(uavRst)
 require(curl)
 require(link2GI)

# project folder
 projRootDir<-tempdir()

# create subfolders please mind that the pathes are exported as global variables
 paths<-link2GI::initProj(projRootDir = projRootDir,
                         projFolders = c("data/","data/ref/","output/","run/","las/"),
                         global = TRUE,
                         path_prefix = "path_")
                         
# get the rgb image, chm and training data 
 url <- "https://github.com/gisma/gismaData/raw/master/uavRst/data/tutorial_data.zip"
 res <- curl::curl_download(url, paste0(path_run,"tutorial_data.zip"))
 unzip(zipfile = res,exdir = ifelse(Sys.info()["sysname"]=="Windows", sub("/$", "",path_run),path_run))

# create the links to the GI software
 giLinks<-uavRst::get_gi()
 
# get the files  
 imageTrainStack <- list()
 geomTrainStack <- list()
 imageTrainFiles <- list.files(pattern="[.]envi$", path=path_run, full.names=TRUE)
 geomTrainFiles <- list.files(pattern="[.]shp$", path=path_run, full.names=TRUE)
 
# create stacks from image and geometry files
 imageTrainStack<-lapply(imageTrainFiles, FUN=raster::stack)
 geomTrainStack  <- lapply(geomTrainFiles, FUN=raster::shapefile)

# get training data frame
 trainDF <- uavRst::get_traindata(rasterStack  = imageTrainStack,
                                    trainPlots = geomTrainStack)
                                                                                            )
}
}
\author{
Chris Reudenbach
}
