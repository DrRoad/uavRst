% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ao_localrelief.R
\name{local_relief}
\alias{local_relief}
\title{Create a hillshading model from LiDAR/UAV generated point cloud}
\usage{
local_relief(lasDir = NULL, gisdbasePath = NULL,
  GRASSlocation = "tmp/", projFolder = c("data/", "output/", "run/",
  "las/"), gridSize = "1.0", paramList = c("i", "v", "n", "g", "f",
  "overwrite", "quiet"), splineNumber = "9",
  proj4 = "+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs",
  gisdbase_exist = FALSE, pathLastools = NULL)
}
\arguments{
\item{lasDir}{character. default is \code{NULL} path to the laz/las file(s)}

\item{gisdbasePath}{character.  gisdbase will be linked or created depending on \code{gisdbase_exist}}

\item{GRASSlocation}{character. location will be linked or created depending on \code{gisdbase_exist}}

\item{projFolder}{character. subfolders in gisdbase for R related processing}

\item{gridSize}{numeric. resolution for raster operations}

\item{paramList}{character. default is c("i","v", "n", "g","f","overwrite","quiet")
i Save intermediate maps; \cr
v Use bspline interpolation to construct the surface.Uses v.surf.bspline cubic interpolation instead of r.fillnulls cubic interpolation\cr
n Invert colors in the color table \cr
g Logarithmic scaling of the color table\cr
f Do not perform histogram equalization on the color table}

\item{splineNumber}{numeric. default is 9 number ob spline iterations}

\item{proj4}{character. default is EPSG 32632 any valid proj4 string that is assumingly the correct one}

\item{gisdbase_exist}{logical. switch if gisdbase is created or  linked only}

\item{pathLastools}{character. character folder containing the Windows binary files of the lastools}
}
\description{
Create a hillshading model on base of LiDAR/UAV generated point cloud.
}
\examples{
\dontrun{

require(uavRst)
require(raster)
require(link2GI)

# proj subfolders
projRootDir<-getwd()
#setwd(paste0(projRootDir,"run"))

paths<-link2GI::initProj(projRootDir = projRootDir,
                         projFolders = c("data/","data/ref/","output/","run/","las/"),
                         global = TRUE,
                         path_prefix = "path_")

# get the data
# get a laz file from Mr. Isenburg
url="http://www.cs.unc.edu/~isenburg/lastools/download/test/s1885565.laz"
res <- curl::curl_download(url=url,
                           destfile=paste0(path_run,"test.laz"),  quiet = TRUE, mode = "wb")
# convert from laz to las
lastool(tool="las2las",paste0(path_run,"test.laz"))

# make the folders and linkages
giLinks<-uavRst::get_gi()

# create a hillshade based on a las/laz point clouds
  hs <- local_relief(lasDir =  paste0(path_run,"test.las"),
                             gisdbasePath = projRootDir,
                             gridSize = "1.0")
}

}
\author{
Chris Reudenbach
}
