% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fa_crownseg.R
\name{chmseg_RL}
\alias{chmseg_RL}
\title{Watershed segmentation based on 'rLiDAR'}
\usage{
chmseg_RL(treepos = NULL, chm = NULL, maxCrownArea = 150,
  exclusion = 0.2)
}
\arguments{
\item{treepos}{numeric. \code{matrix} or \code{data.frame} with three columns (tree xy coordinates and height).
number of crown segments equal to the number of treetops.}

\item{chm}{raster*. Canopy height model in \code{raster} or \code{SpatialGridDataFrame} file format. Should be the same that was used to create
the input for \code{treepos}.}

\item{maxCrownArea}{numeric. A single value of the maximum individual tree crown radius expected. Default 10.0 m.
height of \code{treepos}.}

\item{exclusion}{numeric. A single value from 0 to 1 that represents the percent of pixel exclusion.}
}
\description{
'rLiDAR' segmentation of individual tree crowns based on a canopy height model and initial seeding points (trees). Generic segmentation algorithm
Carlos A. Silva et all.: R package \href{https://CRAN.R-project.org/package=rLiDAR}{rLiDAR}\cr
}
\examples{
\dontrun{

# required packages
 require(uavRst)
 require(curl)
 require(link2GI)
 
# check if SAGA is correctly installed 
if (length(link2GI::findSAGA()) < 1) stop("No valid SAGA GIS instalation found")

# project folder
projRootDir<-tempdir()

# create subfolders please mind that the pathes are exported as global variables
 paths<-link2GI::initProj(projRootDir = projRootDir,
                         projFolders = c("data/","data/ref/","output/","run/","las/"),
                         global = TRUE,
                         path_prefix = "path_")
## overide trailing backslash issue
 path_run<-ifelse(Sys.info()["sysname"]=="Windows", sub("/$", "",path_run),path_run)
 setwd(path_run)                                          
 unlink(paste0(path_run,"*"), force = TRUE
                 
# get the data
 url <- "https://github.com/gisma/gismaData/raw/master/uavRst/data/tutorial.zip"
 res <- curl::curl_download(url, paste0(path_run,"tutorial.zip"))
 unzip(zipfile = res, exdir = path_run)

# make the folders and linkages
 giLinks<-uavRst::get_gi()

# read chm data
 chmR<- raster::raster(paste0(path_run,"chm_2.tif"))
 tPos<- raster::raster(paste0(path_run,"treepos_2.tif"))

# segmentation
 crownsRL <- chmseg_RL(chm= chmR,
                       treepos= tPos,
                       maxCrownArea = 150,
                       exclusion = 0.2)
}
}
